
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

:root {
  // Colors
  --blue: #97bafa;
  --red: #DB5461;
  --black: #232a28;
  --grey: #B4B4B4;

  // Spacing
  --spacing-01: 0.625rem;
  --spacing-02: 1.25rem;

  // Content size
  --size-03: 1000px; 

  // Font size
  --font-md: 1.5rem;
  --font-sm: 1.125rem;
}

body {
  min-height: 100vh;
  display: grid;
  grid-auto-flow: row;
  gap: 2rem;
  align-items: center;
  grid-template-rows: auto 1fr auto;
}

.header {
  display: flex;
  justify-content: space-between;
  font-family: 'Roboto Mono', monospace;
  max-width: 100%;
  padding: 20px;

  &__logo {
    font-size: var(--font-md);
  }
  
  &__menu {
    display: flex;
  }
  
  &__icon {
    width: 32px;
    margin-left: 20px;
  }
}

/* this file is loaded by index.html and styles the page */
.typing-test {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  height: 100%;
  font-family: 'Roboto Mono', monospace;

  &__container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: var(--spacing-02);
    height: 100%;
  }
  
  &__indicators {
    max-width: var(--size-03);
    margin: var(--spacing-01) 0;

    &-container {
      max-width: var(--size-03);
      margin: var(--spacing-01) 0;
      font-size: var(--font-sm);
      display: flex;
      flex-direction: row;
    }
  }

  &__speed-wrapper {
    margin-right: 25px;
  }

  &__restart {
    margin: 25px 50% 0;
  }

  &__errors-wrapper {
  }
  
  &__words {
    max-width: var(--size-03);
    margin: var(--spacing-01) 0;
    
    span {
      font-weight: 400;
      font-size: var(--font-md);
      color: var(--grey);
    }

    &-container {
      display: flex;
      align-items: center;
      margin: var(--spacing-01) 0;
      max-width: var(--size-03);
    }
  }
}

.cursor-end {
  background: var(--black);
  color: #fff;
}

.active {
  animation: cursorFlick 700ms infinite;
}

@keyframes cursorFlick {
  from {
    background: var(--black);
    color: #fff;
  }

  50% {
    background: #fff;
    color: var(--grey);
  }

  to {
    background: var(--black);
    color: #fff;
  }
}

.error {
  color: var(--red) !important;
}

.opacity--0 {
  opacity: 0;
  pointer-events: none;
  transition: all 0.2s;
}

.opacity--1 {
  opacity: 1;
  pointer-events: auto;
  transition: all 0.2s;
}